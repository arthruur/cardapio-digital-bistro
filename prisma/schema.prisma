generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo de Usuário (integrado com Clerk)
model User {
  id           String    @id @default(cuid())
  clerkUserId  String    @unique
  email        String    @unique
  emailVerified DateTime?
  name         String?
  imageUrl     String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  orders       Order[]
}

// Modelo de Mesa
model Table {
  id           String    @id @default(uuid())
  number       Int       @unique
  qrCode       String?   // URL do QR Code
  status       TableStatus @default(AVAILABLE)
  orders       Order[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

// Status da Mesa
enum TableStatus {
  AVAILABLE
  OCCUPIED
  RESERVED
}

// Modelo de Categoria de Item do Cardápio
model Category {
  id           String    @id @default(uuid())
  name         String    @unique
  description  String?
  items        MenuItem[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

// Modelo de Item do Cardápio
model MenuItem {
  id           String    @id @default(uuid())
  name         String
  description  String?
  price        Decimal   @db.Decimal(10, 2)
  imageUrl     String?
  isAvailable  Boolean   @default(true)
  category     Category  @relation(fields: [categoryId], references: [id])
  categoryId   String
  orderItems   OrderItem[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

// Modelo de Pedido
model Order {
  id           String    @id @default(cuid())
  table        Table     @relation(fields: [tableId], references: [id])
  tableId      String
  status       String    @default("PENDING")
  total        Decimal   @default(0)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  userId       String?
  user         User?     @relation(fields: [userId], references: [id])
  items        OrderItem[]
}

// Status do Pedido
enum OrderStatus {
  PENDING
  PREPARING
  READY
  DELIVERED
}

// Modelo de Item do Pedido
model OrderItem {
  id           String    @id @default(cuid())
  name         String
  quantity     Int
  price        Decimal
  notes        String?
  order        Order     @relation(fields: [orderId], references: [id])
  orderId      String
  menuItem     MenuItem  @relation(fields: [menuItemId], references: [id])
  menuItemId   String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}